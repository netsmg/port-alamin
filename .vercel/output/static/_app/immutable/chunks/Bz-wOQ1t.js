import{t as c,a as h}from"./DrjBu-Pq.js";import"./CeIxqNZp.js";import{s as e,f as u,a1 as t,a2 as a,$ as l}from"./CnMiI8Eq.js";import{h as f}from"./fXp2Zi7U.js";const m={title:"Learn advanced web animation with GSAP and Three.js",date:"2025-03-10T00:00:00.000Z",categories:["frontend","javascript"]},{title:v,date:y,categories:S}=m;var w=c('<section><h2 id="youtube"><a href="#youtube">YouTube</a></h2><p>2023: <a href="https://www.youtube.com/watch?v=aMTRukxrjuE" rel="nofollow noopener noreferrer external" target="_blank">Master JavaScript Animations With GSAP | Learn GSAP From Scratch |</a></p></section> <section><h2 id="popular-web-animation-technique"><a href="#popular-web-animation-technique">Popular Web Animation Technique</a></h2><ul><li>Scroll tracking: ScrollTrigger by GSAP, useScroll by Framer Motion (need to combine with Smooth scroll like LENIS or locomotive-scroll)</li> <li>Viewport Detection (Intersection Observer API or just use ScrollTrigger or useInView)</li> <li>Sticky Position (<code>position: sticky; top:10px</code>): very powerful and easy to implement</li> <li>Easing (More info: <a href="https://motion.zajno.com/" rel="nofollow noopener noreferrer external" target="_blank">https://motion.zajno.com/</a>)</li> <li>Text Splitting: GSAP SplitText or SplitType. Can be bad for accessibility</li></ul><section><h3 id="subtle-technique"><a href="#subtle-technique">Subtle technique</a></h3><ul><li>Map function (math): <code>gsap.utils.mapRange(-10,10,100,200,0)</code></li> <li>LERP (Linear Interpolation): use it for cursor stuff</li></ul><pre class="language-js"><!></pre><ul><li>SHADER (must know if you want experimental, artistic stuff)</li></ul></section></section> <section><h2 id="code-examples"><a href="#code-examples">Code examples</a></h2><p><a href="https://blog.olivierlarose.com/courses/web-animation-course" rel="nofollow noopener noreferrer external" target="_blank">https://blog.olivierlarose.com/courses/web-animation-course</a></p></section> <section><h2 id="youtube-reference"><a href="#youtube-reference">Youtube Reference</a></h2><p><a href="https://www.youtube.com/watch?v=9eHEOAn2FOA" rel="nofollow noopener noreferrer external" target="_blank">https://www.youtube.com/watch?v=9eHEOAn2FOA</a></p><p><a href="https://www.youtube.com/watch?v=vqXLGX0szIQ" rel="nofollow noopener noreferrer external" target="_blank">https://www.youtube.com/watch?v=vqXLGX0szIQ</a></p></section> <section><h2 id="gsap-cheatsheet"><a href="#gsap-cheatsheet">GSAP Cheatsheet</a></h2><p><a href="https://gsap.com/cheatsheet" rel="nofollow noopener noreferrer external" target="_blank">GSAP Cheat Sheet</a></p></section> <section><h2 id="webgl-or-threejs"><a href="#webgl-or-threejs">WebGL or ThreeJS</a></h2><p><a href="https://threejs.org/" rel="nofollow noopener noreferrer external" target="_blank">https://threejs.org/</a></p><p><a href="https://threejs-journey.com/" rel="nofollow noopener noreferrer external" target="_blank">https://threejs-journey.com/</a></p><p><a href="https://thebookofshaders.com/" rel="nofollow noopener noreferrer external" target="_blank">https://thebookofshaders.com/</a></p><p><a href="https://webglfundamentals.org/" rel="nofollow noopener noreferrer external" target="_blank">https://webglfundamentals.org/</a></p></section>',1);function x(p){var o=w(),n=e(u(o),2),r=e(t(n),2),s=e(t(r),2),i=t(s);f(i,()=>`<code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">lerp</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">start<span class="token punctuation">,</span>end<span class="token punctuation">,</span>t</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> start <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> t<span class="token punctuation">)</span> <span class="token operator">+</span> end <span class="token operator">*</span>t<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`),a(s),l(),a(r),a(n),l(8),h(p,o)}export{x as default,m as metadata};
