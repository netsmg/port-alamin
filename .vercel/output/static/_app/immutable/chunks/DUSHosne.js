import{t as p,a as c}from"./DrjBu-Pq.js";import"./CeIxqNZp.js";import{s as l,a1 as n,a2 as t}from"./CnMiI8Eq.js";import{h as i}from"./fXp2Zi7U.js";const r={title:"JavaScript Advanced Concept - Nullish Coalescing",date:"2024-05-10T00:00:00.000Z",categories:["javascript"]},{title:m,date:f,categories:v}=r;var u=p('<section><h2 id="nullish-coalescing"><a href="#nullish-coalescing">Nullish Coalescing</a></h2><p>Nullish coalescing is a relativly new operator that was introduced in ES2020. It is similar to the logical OR operator ||, but it only returns the right-hand side if the left-hand side is null or undefined.</p><pre class="language-js"><!></pre></section>');function b(o){var s=u(),a=l(n(s),2),e=n(a);i(e,()=>`<code class="language-js"><span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token operator">??</span> <span class="token string">'bar'</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 'bar'</span>

<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">??</span> <span class="token string">'bar'</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span></code>`),t(a),t(s),c(o,s)}export{b as default,r as metadata};
