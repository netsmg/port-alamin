import{t as y,a as b}from"./DrjBu-Pq.js";import"./CeIxqNZp.js";import{s,f as v,a1 as a,a2 as e,$ as x}from"./CnMiI8Eq.js";import{h as n}from"./fXp2Zi7U.js";const _={title:"How to test your websites on every browsers",date:"2024-04-24T00:00:00.000Z",categories:["frontend","test","playwright"]},{title:W,date:z,categories:H}=_;var j=y('<section><h2 id="major-browsers"><a href="#major-browsers">Major browsers</a></h2><ul><li>Chrome (64%)</li> <li>Safari (20%)</li> <li>Firefox (4%)</li></ul><p>Browser compatibility issues arise due to the use of different rendering engines across browsers. While some browsers, like Brave and Microsoft Edge, utilize the Chromium engine (also used by Google Chrome), others, such as Firefox and Safari, employ their own engines (Gecko and WebKit, respectively). This necessitates testing for each browser, with Chrome and Firefox being available across platforms, unlike Safari, which is exclusive to macOS. This diversity poses challenges for users on Linux or Windows systems.</p></section> <section><h2 id="how-to-test"><a href="#how-to-test">How to test</a></h2><p>You can use Playwright which is used for automated testing and has the ability to test every browser — this works because Playwright ships a binary for every browser including Chromium, Firefox and WebKit using their open source builds.</p><p>This is also useful to have a clean browser testing environment without extensions that can cause interference.</p><p>If you’re not familiar with the JavaScript ecosystem you’re going to need <code>Node.js</code> for the <code>npm</code> package manager.</p></section> <section><h2 id="how-to-setup"><a href="#how-to-setup">How to setup</a></h2><pre class="language-bash"><!></pre><pre class="language-bash"><!></pre><pre class="language-bash"><!></pre><p>Update <code>package.json</code></p><pre class="language-json"><!></pre><p>Add a test</p><pre class="language-js"><!></pre><pre class="language-bash"><!></pre></section> <section><h2 id="reference"><a href="#reference">Reference</a></h2><p><a href="https://joyofcode.xyz/test-your-site-in-every-browser" rel="nofollow noopener noreferrer external" target="_blank">https://joyofcode.xyz/test-your-site-in-every-browser</a></p></section>',1);function B(h){var i=j(),l=s(v(i),4),t=s(a(l)),k=a(t);n(k,()=>'<code class="language-bash"><span class="token function">npm</span> init <span class="token parameter variable">-y</span></code>'),e(t);var o=s(t),d=a(o);n(d,()=>'<code class="language-bash"><span class="token function">npm</span> i <span class="token parameter variable">-D</span> @playwright/test</code>'),e(o);var p=s(o),g=a(p);n(g,()=>'<code class="language-bash">npx playwright <span class="token function">install</span></code>'),e(p);var r=s(p,2),w=a(r);n(w,()=>`<code class="language-json"><span class="token punctuation">&#123;</span>
  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token property">"test:chrome"</span><span class="token operator">:</span> <span class="token string">"npx playwright test --headed --browser=chromium"</span><span class="token punctuation">,</span>
    <span class="token property">"test:firefox"</span><span class="token operator">:</span> <span class="token string">"npx playwright test --headed --browser=firefox"</span><span class="token punctuation">,</span>
    <span class="token property">"test:safari"</span><span class="token operator">:</span> <span class="token string">"npx playwright test --headed --browser=webkit"</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token property">"@playwright/test"</span><span class="token operator">:</span> <span class="token string">"^1.22.1"</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`),e(r);var c=s(r,2),f=a(c);n(f,()=>`<code class="language-js"><span class="token comment">//tests/browser.test.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> test <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@playwright/test'</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'test browser'</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> page <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// point this to wherever you want</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">'http://localhost:3000/'</span><span class="token punctuation">)</span>

  <span class="token comment">// keep browser open</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

</code>`),e(c);var u=s(c),m=a(u);n(m,()=>'<code class="language-bash"><span class="token function">npm</span> run test:safari</code>'),e(u),e(l),x(2),b(h,i)}export{B as default,_ as metadata};
